name: Terraform Plan

on:
  workflow_run: [Packer Build VHD]
  types:
    - completed

jobs:
  plan:
    on_success:
      runs-on: ubuntu-latest
      if: ${{ github.event.workflow_run.conclusion == 'success' }}
      steps:
        - name: Checkout repo
          uses: actions/checkout@v3

        - name: Import VHD ID from previous workflow
          uses: actions/download-artifact@v2
          with:
            name: packer_output
            path: ./

        - name: Set up VHD ID as env variable
          run: cat output.txt >> $VHD_ID

        - name: Setup Azure
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

        - name: Get Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            terraform_version: 'latest'
            terraform_wrapper: false

        - name: Prepare environment variables
          env:
            AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          run: |
            # Parse Azure secret into Packer variables
            export ARM_CLIENT_ID = $(cat $AZURE_CREDENTIALS | jq -r '.clientId') 
            export ARM_CLIENT_SECRET = $(cat $AZURE_CREDENTIALS | jq -r '.clientSecret')
            export ARM_SUBSCRIPTION_ID = $(cat $AZURE_CREDENTIALS | jq -r '.subscriptionId')
            export ARM_TENANT_ID = $(cat $AZURE_CREDENTIALS | jq -r '.tenantId')

        - name: Terraform fmt
          id: fmt
          run: terraform fmt -check

        - name: Terraform init
          id: init
          run: terraform init

        - name: Terraform validate
          id: validate
          run: terraform validate

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color -out tf.plan
          continue-on-error: true

        - name: Terraform Show
          id: show
          run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt

        - name: Upload Plan to GitHub
          uses: actions/upload-artifact@v2
          with:
            name: tf.plan
            path: ./tf.plan





      











